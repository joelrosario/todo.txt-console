#!/usr/bin/env ruby

require 'readline'
require 'parslet'
require 'colorize'

ENV_ = {
	'todo_file' => ENV['TODO_file']
}

def config_extracted_from_environment
	vars = {}

	ENV.keys.find_all{|key|
		key.index('TODO_') == 0
	}.each {|env_var_key|
		internal_var_key = env_var_key.gsub(/^TODO_/, '')
		vars[internal_var_key] = ENV[env_var_key]
	}

	return vars
end

VARS = config_extracted_from_environment

$LOAD_PATH << File.dirname(File.realpath(File.expand_path(__FILE__)))

require 'lib/command_utils.rb'
require 'lib/command_error.rb'
require 'lib/parser.rb'
require 'lib/todo.rb'
require 'lib/todo_list.rb'
require 'lib/modification_command.rb'
require 'lib/add_command.rb'
require 'lib/append_command.rb'
require 'lib/clear_variable_command.rb'
require 'lib/delete_command.rb'
require 'lib/done_command.rb'
require 'lib/list_command.rb'
require 'lib/set_priority_command.rb'
require 'lib/set_variable_command.rb'
require 'lib/show_variable_command.rb'
require 'lib/threshold_command.rb'
require 'lib/update_command.rb'
require 'lib/merge_command.rb'
require 'lib/token_completion.rb'
require 'lib/conflict_utils.rb'
require 'lib/command_execution.rb'

if ARGV.length > 0
	puts conflict_warning if conflict_exists
	execute_command(ARGV.join(' '))
else
	execute_command("ls")
	run_repl
end
